<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Progressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>